<launch>

  <!-- define args -->
  <arg name="freq" default="100" />


  <!-- define params -->
  <param name="freq" value="$(arg freq)" />
  <param name="robot_description" textfile="$(find sawyer_description)/urdf/sawyer.urdf" />

  <!-- start the reference publisher -->
  <!-- <node name="reference_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"> -->
  <!--   <rosparam param="source_list">["partial_joint_states"]</rosparam> -->
  <!--   <param name="rate" value="$(arg freq)"/> -->
  <!--   <remap from="joint_states" to ="reference/joint_states"/> -->
  <!-- </node> -->
  <node name="random_ref_publisher" pkg="sawyer_catching_ball" type="random_valid_goal_generator.py"
  	launch-prefix="xterm -e" required="true">
    <remap from="joint_states" to ="reference/joint_states"/>
    <remap from="pose" to="reference/pose"/>
  </node>

  <!-- load reference visualization stuff -->
  <group ns="reference" >
  	<!-- connect reference to actual -->
	<node name="world_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base reference/base 100" />
  	<!-- <include file="$(find baxter_ee_controller)/launch/load_kinematics_urdf.launch" /> -->
  	<!-- robot state publisher -->
  	<node name="ref_robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
  	  <!-- <param name="tf_prefix" value="reference" /> -->
  	</node>
  </group>


  <!-- start the inverse kinematics publisher -->
  <!-- <node name="inverse_kinematics_controller" pkg="sawyer_catching_ball" type="inverse_kinematic_controller"> -->
  <!-- </node> -->



  <!-- start the joint state publisher  -->
  <!-- <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen" /> -->

  <!-- create model in rviz -->
  <!-- <node name="world_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base reference/base 100" /> -->
  <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" > -->
    <!-- <remap from="joint_states" to="robot/joint_states" /> -->
  <!--   <remap from="joint_states" to="reference/joint_states" /> -->
  <!-- </node> -->
  <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find sawyer_description)config/sawyer.rviz"/>
  
  
  <!-- start the IK controller and visualization -->
  

  <!-- IK controller node with ability a function from a frame to another frame -->

  <!-- <node name="fwd_kin" pkg="sawyer_catching_ball" type="fwd_kin.py" /> -->
  <!-- <node name="SO3_to_pose" pkg="sawyer_catching_ball" type="SO3_to_pose.py" /> -->
  <!-- <node name="pose_to_SO3" pkg="sawyer_catching_ball" type="pose_to_SO3.py" /> -->
  <!-- <node name="kin_cont_node" pkg="sawyer_catching_ball" type="kin_cont_node.py" /> -->
  <!-- <node name="sawyer_sim" pkg="sawyer_catching_ball" type="sawyer_sim.py" /> -->


</launch>


